"use strict";(self.webpackChunklearnsutra=self.webpackChunklearnsutra||[]).push([[7072],{5722:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Basics/types-of-indexes","title":"Types of Database Indexes","description":"---","source":"@site/database/Basics/types-of-indexes.md","sourceDirName":"Basics","slug":"/Basics/types-of-indexes","permalink":"/database/Basics/types-of-indexes","draft":false,"unlisted":false,"editUrl":"https://github.com/absaini25/learnsutra/edit/main/database/Basics/types-of-indexes.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","next":{"title":"Learning content around databases","permalink":"/database/"}}');var r=n(4848),l=n(8453);const t={},d="Types of Database Indexes",a={},c=[{value:"<strong>1. Clustered Index</strong>",id:"1-clustered-index",level:3},{value:"Key Characteristics:",id:"key-characteristics",level:4},{value:"Example:",id:"example",level:4},{value:"<strong>2. Non-Clustered Index</strong>",id:"2-non-clustered-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-1",level:4},{value:"Example:",id:"example-1",level:4},{value:"<strong>3. Unique Index</strong>",id:"3-unique-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-2",level:4},{value:"Example:",id:"example-2",level:4},{value:"<strong>4. Composite Index</strong>",id:"4-composite-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-3",level:4},{value:"Example:",id:"example-3",level:4},{value:"<strong>5. Full-Text Index</strong>",id:"5-full-text-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-4",level:4},{value:"Example:",id:"example-4",level:4},{value:"<strong>6. Spatial Index</strong>",id:"6-spatial-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-5",level:4},{value:"Example:",id:"example-5",level:4},{value:"<strong>7. Bitmap Index</strong>",id:"7-bitmap-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-6",level:4},{value:"Example:",id:"example-6",level:4},{value:"Use Case:",id:"use-case",level:4},{value:"<strong>8. Function-Based Index</strong>",id:"8-function-based-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-7",level:4},{value:"Example:",id:"example-7",level:4},{value:"<strong>9. Covering Index</strong>",id:"9-covering-index",level:3},{value:"Key Characteristics:",id:"key-characteristics-8",level:4},{value:"Example:",id:"example-8",level:4},{value:"Summary of Index Types",id:"summary-of-index-types",level:3}];function o(e){const s={code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"types-of-database-indexes",children:"Types of Database Indexes"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"1-clustered-index",children:(0,r.jsx)(s.strong,{children:"1. Clustered Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"clustered index"})," determines the physical storage order of the data in the table. Because the table rows are stored in this order, retrieving a range of values is very efficient."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"One per Table:"})," You can only have one clustered index since it dictates the physical arrangement of data."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Primary Key by Default:"})," In most RDBMSs, the primary key becomes the clustered index unless specified otherwise."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Efficient for Range Queries:"})," Works best for queries that involve ordered retrieval, such as those using ",(0,r.jsx)(s.code,{children:"BETWEEN"}),", ",(0,r.jsx)(s.code,{children:"<"}),", ",(0,r.jsx)(s.code,{children:">"}),", or ",(0,r.jsx)(s.code,{children:"ORDER BY"}),"."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE TABLE Orders (\n    OrderID INT PRIMARY KEY,\n    CustomerID INT,\n    OrderDate DATE\n);\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Here, ",(0,r.jsx)(s.code,{children:"OrderID"})," is the clustered index. If you query ",(0,r.jsx)(s.code,{children:"WHERE OrderID BETWEEN 100 AND 200"}),", the database can directly access the range since rows are stored in sorted order."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"2-non-clustered-index",children:(0,r.jsx)(s.strong,{children:"2. Non-Clustered Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"non-clustered index"})," creates a separate structure that contains pointers (row locators) to the actual table rows. The physical order of data remains unaffected."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-1",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Multiple Indexes Allowed:"})," A table can have several non-clustered indexes."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Uses a Lookup Process:"})," The database uses the non-clustered index to find the data's location, then retrieves it from the table."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-1",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE INDEX idx_customer_id ON Orders (CustomerID);\n"})}),"\n",(0,r.jsx)(s.p,{children:"This index is helpful for queries like:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM Orders WHERE CustomerID = 123;\n"})}),"\n",(0,r.jsxs)(s.p,{children:["For this query, the database uses ",(0,r.jsx)(s.code,{children:"idx_customer_id"})," to locate the rows associated with ",(0,r.jsx)(s.code,{children:"CustomerID = 123"})," and then fetches them."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"3-unique-index",children:(0,r.jsx)(s.strong,{children:"3. Unique Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"unique index"})," ensures that the indexed column(s) do not contain duplicate values. It\u2019s often used to enforce uniqueness constraints."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-2",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Similar to Primary Key:"})," But a table can have multiple unique indexes, while it can have only one primary key."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Prevents Duplicates:"})," It throws an error if an attempt is made to insert duplicate values."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-2",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE UNIQUE INDEX idx_email ON Users (Email);\n"})}),"\n",(0,r.jsx)(s.p,{children:"This ensures that no two rows have the same email address."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"4-composite-index",children:(0,r.jsx)(s.strong,{children:"4. Composite Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"composite index"})," (also called a multi-column index) is created on two or more columns. It's useful for queries involving conditions on multiple columns."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-3",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Column Order Matters:"})," The order of columns in the composite index determines how it\u2019s used."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Covers Multiple Queries:"})," Optimizes queries that filter or sort based on the combined values of the indexed columns."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-3",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE INDEX idx_name_email ON Users (Name, Email);\n"})}),"\n",(0,r.jsx)(s.p,{children:"This index is efficient for queries like:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM Users WHERE Name = 'Alice' AND Email = 'alice@example.com';\n"})}),"\n",(0,r.jsxs)(s.p,{children:["It\u2019s less efficient for queries like ",(0,r.jsx)(s.code,{children:"WHERE Email = 'alice@example.com'"})," because the ",(0,r.jsx)(s.code,{children:"Name"})," column is indexed first."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"5-full-text-index",children:(0,r.jsx)(s.strong,{children:"5. Full-Text Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"full-text index"})," is used for efficient text searching, particularly when searching for specific words, phrases, or patterns within large text fields."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-4",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Optimized for Text Search:"})," Finds words in large text fields, such as articles or logs."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Supports Advanced Queries:"})," Allows querying with logical operators, phrases, or partial matches."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-4",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE FULLTEXT INDEX idx_content ON Articles (Content);\n"})}),"\n",(0,r.jsx)(s.p,{children:"Query example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM Articles WHERE MATCH(Content) AGAINST ('database optimization');\n"})}),"\n",(0,r.jsx)(s.p,{children:'This retrieves articles that mention "database optimization."'}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"6-spatial-index",children:(0,r.jsx)(s.strong,{children:"6. Spatial Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"spatial index"})," is used for geographic or spatial data, like coordinates. It supports queries such as finding points within a certain radius or bounding box."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-5",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Optimized for GIS Data:"})," Works with spatial data types like ",(0,r.jsx)(s.code,{children:"POINT"}),", ",(0,r.jsx)(s.code,{children:"LINESTRING"}),", and ",(0,r.jsx)(s.code,{children:"POLYGON"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Used in Location-Based Queries:"})," Enables efficient geographic searches."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-5",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE SPATIAL INDEX idx_location ON Locations (Coordinates);\n"})}),"\n",(0,r.jsx)(s.p,{children:"This index optimizes queries like:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM Locations WHERE ST_Distance(Coordinates, ST_Point(12.34, 56.78)) < 10;\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"7-bitmap-index",children:(0,r.jsx)(s.strong,{children:"7. Bitmap Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"bitmap index"})," is used for columns with low cardinality (few unique values). It uses bitmaps (binary vectors) to represent the indexed data."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-6",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Low Cardinality:"})," Best for columns with values like ",(0,r.jsx)(s.code,{children:"Male/Female"})," or ",(0,r.jsx)(s.code,{children:"Yes/No"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Efficient for Analytical Queries:"})," Often used in data warehouses."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-6",children:"Example:"}),"\n",(0,r.jsxs)(s.p,{children:["For a ",(0,r.jsx)(s.code,{children:"Gender"})," column:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-plaintext",children:"Row:      1  2  3  4  5\nGender:   M  F  F  M  M\n\nBitmap for M: 1  0  0  1  1\nBitmap for F: 0  1  1  0  0\n"})}),"\n",(0,r.jsx)(s.h4,{id:"use-case",children:"Use Case:"}),"\n",(0,r.jsxs)(s.p,{children:["Querying for ",(0,r.jsx)(s.code,{children:"Gender = 'M'"})," is instantaneous because the system directly accesses the bitmap."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"8-function-based-index",children:(0,r.jsx)(s.strong,{children:"8. Function-Based Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"function-based index"})," is built on the result of a function or expression applied to a column. It\u2019s useful when queries often involve transformations."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-7",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Precomputes Functions:"})," Avoids recalculating functions during queries."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Efficient for Derived Data:"})," Indexes derived values instead of storing them separately."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-7",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE INDEX idx_upper_name ON Users (UPPER(Name));\n"})}),"\n",(0,r.jsx)(s.p,{children:"Optimizes queries like:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT * FROM Users WHERE UPPER(Name) = 'ALICE';\n"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"9-covering-index",children:(0,r.jsx)(s.strong,{children:"9. Covering Index"})}),"\n",(0,r.jsxs)(s.p,{children:["A ",(0,r.jsx)(s.strong,{children:"covering index"})," includes all the columns required by a query. This avoids accessing the actual table and improves performance."]}),"\n",(0,r.jsx)(s.h4,{id:"key-characteristics-8",children:"Key Characteristics:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Query-Specific:"})," Tailored to a query's specific needs."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.strong,{children:"Reduces Table Access:"})," Queries are satisfied entirely by the index."]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"example-8",children:"Example:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"CREATE INDEX idx_covering ON Users (Name, Email);\n"})}),"\n",(0,r.jsx)(s.p,{children:"For a query:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-sql",children:"SELECT Name, Email FROM Users WHERE Name = 'Alice';\n"})}),"\n",(0,r.jsx)(s.p,{children:"The database retrieves results directly from the index, bypassing the table."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"summary-of-index-types",children:"Summary of Index Types"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Index Type"}),(0,r.jsx)(s.th,{children:"Key Benefit"}),(0,r.jsx)(s.th,{children:"Use Case"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Clustered"})}),(0,r.jsx)(s.td,{children:"Orders data physically in the table"}),(0,r.jsxs)(s.td,{children:["Range queries (",(0,r.jsx)(s.code,{children:"BETWEEN"}),", ",(0,r.jsx)(s.code,{children:"<"}),", ",(0,r.jsx)(s.code,{children:">"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Non-Clustered"})}),(0,r.jsx)(s.td,{children:"Separate index structure"}),(0,r.jsx)(s.td,{children:"General-purpose lookups on non-key columns"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Unique"})}),(0,r.jsx)(s.td,{children:"Ensures uniqueness"}),(0,r.jsxs)(s.td,{children:["Enforce constraints (",(0,r.jsx)(s.code,{children:"Email"}),", ",(0,r.jsx)(s.code,{children:"SSN"}),")"]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Composite"})}),(0,r.jsx)(s.td,{children:"Combines multiple columns"}),(0,r.jsx)(s.td,{children:"Multi-column filtering and sorting"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Full-Text"})}),(0,r.jsx)(s.td,{children:"Optimized for word/phrase searches"}),(0,r.jsx)(s.td,{children:"Articles, blogs, and document repositories"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Spatial"})}),(0,r.jsx)(s.td,{children:"Handles geographic data"}),(0,r.jsx)(s.td,{children:"Location-based services, GIS systems"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Bitmap"})}),(0,r.jsx)(s.td,{children:"Efficient for low-cardinality columns"}),(0,r.jsx)(s.td,{children:"Gender, Boolean flags, categorical data"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Function-Based"})}),(0,r.jsx)(s.td,{children:"Indexes derived or transformed values"}),(0,r.jsx)(s.td,{children:"Case-insensitive searches, derived columns"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.strong,{children:"Covering"})}),(0,r.jsx)(s.td,{children:"Contains all needed query columns"}),(0,r.jsx)(s.td,{children:"Query optimization, avoiding table lookups"})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"Each index type serves specific scenarios. Choosing the right one depends on query patterns, table size, and cardinality of the data."})]})}function h(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>d});var i=n(6540);const r={},l=i.createContext(r);function t(e){const s=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);