"use strict";(self.webpackChunklearnsutra=self.webpackChunklearnsutra||[]).push([[4403],{2034:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Binary Search/binary-search-template","title":"binary-search-template","description":"Binary search is a powerful tool for efficiently solving problems that involve a monotonic function. To use binary","source":"@site/docs/Binary Search/binary-search-template.md","sourceDirName":"Binary Search","slug":"/Binary Search/binary-search-template","permalink":"/docs/Binary Search/binary-search-template","draft":false,"unlisted":false,"editUrl":"https://github.com/absaini25/learnsutra/docs/Binary Search/binary-search-template.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Data Structures and Algorithms Intro","permalink":"/docs/intro"},"next":{"title":"Python knowledge for DSA","permalink":"/docs/Cheat Sheets/python-for-dsa"}}');var t=r(4848),s=r(8453);const l={},a=void 0,o={},d=[{value:"<strong>The Core Idea</strong>",id:"the-core-idea",level:3},{value:"<strong>Binary Search Template</strong>",id:"binary-search-template",level:3},{value:"<strong>Adapting the Template</strong>",id:"adapting-the-template",level:3},{value:"<strong>Example 1: Find the First <code>True</code></strong>",id:"example-1-find-the-first-true",level:3},{value:"Feasible Function:",id:"feasible-function",level:4},{value:"Solution:",id:"solution",level:4},{value:"Output:",id:"output",level:4},{value:"<strong>Example 2: Find the Last <code>False</code></strong>",id:"example-2-find-the-last-false",level:3},{value:"Feasible Function:",id:"feasible-function-1",level:4},{value:"Solution:",id:"solution-1",level:4},{value:"Output:",id:"output-1",level:4},{value:"<strong>Key Insights</strong>",id:"key-insights",level:3},{value:"<strong>Real-World Applications</strong>",id:"real-world-applications",level:3},{value:"<strong>Conclusion</strong>",id:"conclusion",level:3}];function h(e){const n={code:"code",em:"em",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Binary search is a powerful tool for efficiently solving problems that involve a ",(0,t.jsx)(n.strong,{children:"monotonic function"}),". To use binary\nsearch effectively, you must decide how to adjust the search range based on the problem's requirements \u2014 whether you're\nlooking for the ",(0,t.jsx)(n.strong,{children:"first feasible candidate"})," or the ",(0,t.jsx)(n.strong,{children:"last feasible candidate"}),". This post provides a detailed template\nand discusses how to adapt it for different scenarios."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"the-core-idea",children:(0,t.jsx)(n.strong,{children:"The Core Idea"})}),"\n",(0,t.jsx)(n.p,{children:"Binary search works on problems where the data or condition exhibits a monotonic behavior. That is, as you move along\nthe search range:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A condition either transitions from ",(0,t.jsx)(n.code,{children:"False"})," to ",(0,t.jsx)(n.code,{children:"True"})," (",(0,t.jsx)(n.strong,{children:"non-decreasing"}),") or from ",(0,t.jsx)(n.code,{children:"True"})," to ",(0,t.jsx)(n.code,{children:"False"})," (",(0,t.jsx)(n.strong,{children:"non-increasing"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["In binary search, the goal is to narrow the search range until the target element or condition is located. To achieve\nthis, the update logic depends on whether we are moving ",(0,t.jsx)(n.strong,{children:"left"})," or ",(0,t.jsx)(n.strong,{children:"right"})," for the next feasible candidate."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"binary-search-template",children:(0,t.jsx)(n.strong,{children:"Binary Search Template"})}),"\n",(0,t.jsxs)(n.p,{children:["The template is structured to handle both cases \u2014 finding the ",(0,t.jsx)(n.strong,{children:"first feasible candidate"})," and the ",(0,t.jsx)(n.strong,{children:"last feasible\ncandidate"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def binary_search(arr, target):\n    left, right = 0, len(arr) - 1\n    result = -1  # Default if no solution is found\n\n    while left <= right:\n        mid = (left + right) // 2\n\n        if feasible(mid):  # Feasible condition depends on the problem\n            result = mid  # Update the result\n            # Adjust search range depending on the problem\n            right = mid - 1  # Move left for the first feasible candidate\n            # left = mid + 1  # Uncomment to move right for the last feasible candidate\n            # As a general rule, we need to figure out in which half our next feasible candidate would be found\n            # and accordingly shrink the range.\n        else:\n            # Adjust search range to exclude the non-feasible mid\n            left = mid + 1  # Move right if condition is not met\n            # right = mid - 1  # Uncomment to move left if needed\n\n    return result\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"adapting-the-template",children:(0,t.jsx)(n.strong,{children:"Adapting the Template"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Finding the First Feasible Candidate"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the feasible condition is satisfied at ",(0,t.jsx)(n.code,{children:"mid"}),", the result is updated to ",(0,t.jsx)(n.code,{children:"mid"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Narrow the search to the ",(0,t.jsx)(n.strong,{children:"left half"})," (",(0,t.jsx)(n.code,{children:"right = mid - 1"}),") to find earlier occurrences."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Finding the Last Feasible Candidate"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the feasible condition is satisfied at ",(0,t.jsx)(n.code,{children:"mid"}),", the result is updated to ",(0,t.jsx)(n.code,{children:"mid"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Narrow the search to the ",(0,t.jsx)(n.strong,{children:"right half"})," (",(0,t.jsx)(n.code,{children:"left = mid + 1"}),") to find later occurrences."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-1-find-the-first-true",children:(0,t.jsxs)(n.strong,{children:["Example 1: Find the First ",(0,t.jsx)(n.code,{children:"True"})]})}),"\n",(0,t.jsxs)(n.p,{children:["Given a boolean array ",(0,t.jsx)(n.code,{children:"[False, False, True, True, True]"}),", find the ",(0,t.jsxs)(n.strong,{children:["index of the first ",(0,t.jsx)(n.code,{children:"True"})]}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"feasible-function",children:"Feasible Function:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def feasible(mid):\n    return arr[mid] == True\n"})}),"\n",(0,t.jsx)(n.h4,{id:"solution",children:"Solution:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def find_first_true(arr):\n    left, right = 0, len(arr) - 1\n    result = -1\n\n    while left <= right:\n        mid = (left + right) // 2\n        if arr[mid]:  # Feasible condition: arr[mid] == True\n            result = mid\n            right = mid - 1  # Move left for the first feasible candidate\n        else:\n            left = mid + 1  # Move right if not feasible\n\n    return result\n"})}),"\n",(0,t.jsx)(n.h4,{id:"output",children:"Output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"arr = [False, False, True, True, True]\nprint(find_first_true(arr))  # Output: 2\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"example-2-find-the-last-false",children:(0,t.jsxs)(n.strong,{children:["Example 2: Find the Last ",(0,t.jsx)(n.code,{children:"False"})]})}),"\n",(0,t.jsxs)(n.p,{children:["Given the same boolean array, find the ",(0,t.jsxs)(n.strong,{children:["index of the last ",(0,t.jsx)(n.code,{children:"False"})]}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"feasible-function-1",children:"Feasible Function:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def feasible(mid):\n    return arr[mid] == False\n"})}),"\n",(0,t.jsx)(n.h4,{id:"solution-1",children:"Solution:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"def find_last_false(arr):\n    left, right = 0, len(arr) - 1\n    result = -1\n\n    while left <= right:\n        mid = (left + right) // 2\n        if not arr[mid]:  # Feasible condition: arr[mid] == False\n            result = mid\n            left = mid + 1  # Move right for the last feasible candidate\n        else:\n            right = mid - 1  # Move left if not feasible\n\n    return result\n"})}),"\n",(0,t.jsx)(n.h4,{id:"output-1",children:"Output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"arr = [False, False, True, True, True]\nprint(find_last_false(arr))  # Output: 1\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"key-insights",children:(0,t.jsx)(n.strong,{children:"Key Insights"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Adjusting the Search Range"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The direction you adjust the range (",(0,t.jsx)(n.code,{children:"left"})," or ",(0,t.jsx)(n.code,{children:"right"}),") depends on whether you're looking for the ",(0,t.jsx)(n.strong,{children:"first"})," or *\n",(0,t.jsx)(n.em,{children:"last"}),"* occurrence."]}),"\n",(0,t.jsx)(n.li,{children:"Always test your range adjustments to ensure correctness."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Feasible Function"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The feasible function encapsulates the problem's constraints and determines whether the current index satisfies\nthe condition."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Boundary Conditions"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Handle edge cases, such as when the array contains no feasible candidates (e.g., all ",(0,t.jsx)(n.code,{children:"False"})," or all ",(0,t.jsx)(n.code,{children:"True"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"real-world-applications",children:(0,t.jsx)(n.strong,{children:"Real-World Applications"})}),"\n",(0,t.jsx)(n.p,{children:"Binary search with monotonic functions is widely applicable:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Find the smallest/largest element that satisfies a condition"})," (e.g., minimum capacity to transport goods within a\ndeadline)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Allocate resources"})," (e.g., minimum number of servers required to handle traffic)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Search for a boundary in sorted data"})," (e.g., pivot points in rotated arrays)."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"conclusion",children:(0,t.jsx)(n.strong,{children:"Conclusion"})}),"\n",(0,t.jsx)(n.p,{children:"Binary search is more than just a tool for sorted arrays. Its power lies in efficiently narrowing down a search range\nbased on a monotonic feasibility function. By understanding how to adapt the search range for different problems, you\ncan apply binary search to a wide variety of scenarios."}),"\n",(0,t.jsxs)(n.p,{children:["Let the problem guide you: ",(0,t.jsx)(n.strong,{children:"Are you looking for the first feasible candidate or the last feasible candidate?"})," Once you\nanswer this, the binary search template will do the rest!"]})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>a});var i=r(6540);const t={},s=i.createContext(t);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);