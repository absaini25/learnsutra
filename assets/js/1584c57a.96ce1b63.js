"use strict";(self.webpackChunklearnsutra=self.webpackChunklearnsutra||[]).push([[965],{9154:(s,e,n)=>{n.r(e),n.d(e,{assets:()=>m,contentTitle:()=>t,default:()=>o,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var a=n(490),i=n(4848),l=n(8453);const r={slug:"test",title:"Dynamic Programing",authors:["absaini25"],tags:["hola","docusaurus"]},t=void 0,m={authorsImageUrls:[void 0]},c=[{value:"<strong>Real-World Applications of Dynamic Programming</strong>",id:"real-world-applications-of-dynamic-programming",level:3},{value:"<strong>1. Job Scheduling with Deadlines and Profits</strong>",id:"1-job-scheduling-with-deadlines-and-profits",level:3},{value:"<strong>Problem Statement</strong>",id:"problem-statement",level:4},{value:"<strong>Formulation</strong>",id:"formulation",level:4},{value:"<strong>Implementation</strong>",id:"implementation",level:4},{value:"<strong>2. Game Theory with Minimax and DP</strong>",id:"2-game-theory-with-minimax-and-dp",level:3},{value:"<strong>Problem Statement</strong>",id:"problem-statement-1",level:4},{value:"<strong>Formulation</strong>",id:"formulation-1",level:4},{value:"<strong>Implementation</strong>",id:"implementation-1",level:4},{value:"<strong>3. Real-World Applications Overview</strong>",id:"3-real-world-applications-overview",level:3},{value:"<strong>Scheduling Problems</strong>",id:"scheduling-problems",level:4},{value:"<strong>Game Theory</strong>",id:"game-theory",level:4},{value:"<strong>Dynamic Pricing</strong>",id:"dynamic-pricing",level:4},{value:"<strong>Resource Allocation</strong>",id:"resource-allocation",level:4},{value:"<strong>Advanced Dynamic Programming Concepts</strong>",id:"advanced-dynamic-programming-concepts",level:3},{value:"<strong>1. Policy-Based Optimization</strong>",id:"1-policy-based-optimization",level:3},{value:"<strong>1.1 Knuth Optimization</strong>",id:"11-knuth-optimization",level:4},{value:"<strong>Problem Statement</strong>",id:"problem-statement-2",level:5},{value:"<strong>Key Idea</strong>",id:"key-idea",level:5},{value:"<strong>Implementation</strong>",id:"implementation-2",level:5},{value:"<strong>1.2 Divide-and-Conquer DP</strong>",id:"12-divide-and-conquer-dp",level:4},{value:"<strong>Problem Example</strong>:",id:"problem-example",level:5},{value:"<strong>2. Approximation Techniques</strong>",id:"2-approximation-techniques",level:3},{value:"<strong>Example: Traveling Salesman Problem (TSP)</strong>",id:"example-traveling-salesman-problem-tsp",level:4},{value:"<strong>3. Real-World Competitive Challenges</strong>",id:"3-real-world-competitive-challenges",level:3},{value:"<strong>Example 1: Google Kick Start - Painting Fence</strong>",id:"example-1-google-kick-start---painting-fence",level:4},{value:"<strong>DP Solution</strong>:",id:"dp-solution",level:5},{value:"<strong>Hybrid approaches</strong>",id:"hybrid-approaches",level:3},{value:"<strong>Let\u2019s Explore These Concepts in Detail:</strong>",id:"lets-explore-these-concepts-in-detail",level:3},{value:"<strong>1. Combining Greedy Algorithms with DP</strong>",id:"1-combining-greedy-algorithms-with-dp",level:4},{value:"<strong>Example: Job Scheduling Problem</strong>",id:"example-job-scheduling-problem",level:5},{value:"<strong>Hybrid Solution (Greedy + DP):</strong>",id:"hybrid-solution-greedy--dp",level:5},{value:"<strong>Java Code for Job Scheduling Problem (Greedy + DP)</strong>",id:"java-code-for-job-scheduling-problem-greedy--dp",level:5},{value:"<strong>Explanation of Code:</strong>",id:"explanation-of-code",level:3},{value:"<strong>Time Complexity:</strong>",id:"time-complexity",level:3},{value:"<strong>2. Multi-Dimensional DP</strong>",id:"2-multi-dimensional-dp",level:4},{value:"<strong>Example: Knapsack Problem with Multiple Constraints</strong>",id:"example-knapsack-problem-with-multiple-constraints",level:5},{value:"<strong>Java Code for Multi-Dimensional Knapsack Problem:</strong>",id:"java-code-for-multi-dimensional-knapsack-problem",level:5},{value:"<strong>3. Solving Interactive Problems with DP</strong>",id:"3-solving-interactive-problems-with-dp",level:4},{value:"<strong>Example: Interactive Game Theory Problem (Nim Game)</strong>",id:"example-interactive-game-theory-problem-nim-game",level:5},{value:"<strong>Java Code (Nim Game with DP):</strong>",id:"java-code-nim-game-with-dp",level:5}];function h(s){const e={annotation:"annotation",br:"br",code:"code",h3:"h3",h4:"h4",h5:"h5",hr:"hr",li:"li",math:"math",mi:"mi",mn:"mn",mo:"mo",mrow:"mrow",msup:"msup",ol:"ol",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,l.R)(),...s.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h3,{id:"real-world-applications-of-dynamic-programming",children:(0,i.jsx)(e.strong,{children:"Real-World Applications of Dynamic Programming"})}),"\n",(0,i.jsxs)(e.p,{children:["Dynamic Programming (DP) has practical applications in a variety of domains, including scheduling, game theory, and even real-world decision-making processes like dynamic pricing and resource allocation. In this section, we\u2019ll explore ",(0,i.jsx)(e.strong,{children:"Job Scheduling"}),", ",(0,i.jsx)(e.strong,{children:"Game Theory"})," (specifically Minimax with DP), and other examples, complete with Java code implementations."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"1-job-scheduling-with-deadlines-and-profits",children:(0,i.jsx)(e.strong,{children:"1. Job Scheduling with Deadlines and Profits"})}),"\n",(0,i.jsx)(e.h4,{id:"problem-statement",children:(0,i.jsx)(e.strong,{children:"Problem Statement"})}),"\n",(0,i.jsxs)(e.p,{children:["You are given ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"n"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]})," jobs where each job has a deadline and a profit if the job is completed before its deadline. Each job takes 1 unit of time. Schedule the jobs to maximize total profit, ensuring no two jobs overlap."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"formulation",children:(0,i.jsx)(e.strong,{children:"Formulation"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Sort Jobs by Profit"}),(0,i.jsx)(e.br,{}),"\n","Prioritize jobs with higher profit."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"State Representation"}),(0,i.jsx)(e.br,{}),"\n","Use a timeline (array) to track available slots for scheduling."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Algorithm"}),(0,i.jsx)(e.br,{}),"\n","For each job, try to schedule it in the latest possible slot before its deadline. Use a greedy approach combined with DP-like memory management."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"implementation",children:(0,i.jsx)(e.strong,{children:"Implementation"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java Code:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import java.util.Arrays;\nimport java.util.Comparator;\n\npublic class JobScheduling {\n    static class Job {\n        int id, deadline, profit;\n\n        Job(int id, int deadline, int profit) {\n            this.id = id;\n            this.deadline = deadline;\n            this.profit = profit;\n        }\n    }\n\n    public static int maxProfit(Job[] jobs) {\n        // Sort jobs by profit in descending order\n        Arrays.sort(jobs, (a, b) -> b.profit - a.profit);\n\n        int maxDeadline = Arrays.stream(jobs).mapToInt(job -> job.deadline).max().orElse(0);\n        int[] slots = new int[maxDeadline + 1]; // Track free slots\n        Arrays.fill(slots, -1);\n\n        int totalProfit = 0;\n\n        // Schedule jobs\n        for (Job job : jobs) {\n            for (int i = job.deadline; i > 0; i--) {\n                if (slots[i] == -1) {\n                    slots[i] = job.id; // Assign job to this slot\n                    totalProfit += job.profit;\n                    break;\n                }\n            }\n        }\n\n        return totalProfit;\n    }\n\n    public static void main(String[] args) {\n        Job[] jobs = {\n            new Job(1, 4, 20),\n            new Job(2, 1, 10),\n            new Job(3, 1, 40),\n            new Job(4, 1, 30)\n        };\n\n        System.out.println("Maximum Profit: " + maxProfit(jobs)); // Output: 60\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"2-game-theory-with-minimax-and-dp",children:(0,i.jsx)(e.strong,{children:"2. Game Theory with Minimax and DP"})}),"\n",(0,i.jsx)(e.h4,{id:"problem-statement-1",children:(0,i.jsx)(e.strong,{children:"Problem Statement"})}),"\n",(0,i.jsx)(e.p,{children:"Two players play a game where they take turns picking numbers from either end of an array. The goal is to maximize your score. Determine the maximum score the first player can achieve assuming both players play optimally."}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"formulation-1",children:(0,i.jsx)(e.strong,{children:"Formulation"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"State Representation"}),(0,i.jsx)(e.br,{}),"\n",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][j]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]}),": The maximum score the current player can achieve from the subarray ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"u"}),(0,i.jsx)(e.mi,{children:"m"}),(0,i.jsx)(e.mi,{children:"s"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"nums[i]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]})," to ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"u"}),(0,i.jsx)(e.mi,{children:"m"}),(0,i.jsx)(e.mi,{children:"s"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"nums[j]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]}),"."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Recurrence Relation"}),(0,i.jsx)(e.br,{}),"\n","At each turn, the current player picks from either end:"]}),"\n",(0,i.jsx)(e.span,{className:"katex-display",children:(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"max"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"u"}),(0,i.jsx)(e.mi,{children:"m"}),(0,i.jsx)(e.mi,{children:"s"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"min"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mn,{children:"2"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{separator:"true",children:","}),(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{separator:"true",children:","}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"u"}),(0,i.jsx)(e.mi,{children:"m"}),(0,i.jsx)(e.mi,{children:"s"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"min"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{separator:"true",children:","}),(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"2"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][j] = \\max(nums[i] + \\min(dp[i+2][j], dp[i+1][j-1]),\nnums[j] + \\min(dp[i+1][j-1], dp[i][j-2]))"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mop",children:"max"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mop",children:"min"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"2"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mpunct",children:","}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mclose",children:"])"}),(0,i.jsx)(e.span,{className:"mpunct",children:","}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mop",children:"min"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mpunct",children:","}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"2"}),(0,i.jsx)(e.span,{className:"mclose",children:"]))"})]})]})]})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Base Case"}),(0,i.jsx)(e.br,{}),"\n",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{children:"="}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"u"}),(0,i.jsx)(e.mi,{children:"m"}),(0,i.jsx)(e.mi,{children:"s"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][i] = nums[i]"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.jsx)(e.span,{className:"mrel",children:"="}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2778em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"u"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"m"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"s"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})]})]}),": If there\u2019s only one element, that\u2019s the score."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"implementation-1",children:(0,i.jsx)(e.strong,{children:"Implementation"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java Code:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class OptimalGameStrategy {\n    public static int maxScore(int[] nums) {\n        int n = nums.length;\n        int[][] dp = new int[n][n];\n\n        // Base case: Single element\n        for (int i = 0; i < n; i++) {\n            dp[i][i] = nums[i];\n        }\n\n        // Fill DP table diagonally\n        for (int length = 2; length <= n; length++) {\n            for (int i = 0; i <= n - length; i++) {\n                int j = i + length - 1;\n                int pickLeft = nums[i] + Math.min((i + 2 <= j ? dp[i + 2][j] : 0), \n                                                  (i + 1 <= j - 1 ? dp[i + 1][j - 1] : 0));\n                int pickRight = nums[j] + Math.min((i <= j - 2 ? dp[i][j - 2] : 0), \n                                                   (i + 1 <= j - 1 ? dp[i + 1][j - 1] : 0));\n                dp[i][j] = Math.max(pickLeft, pickRight);\n            }\n        }\n\n        return dp[0][n - 1];\n    }\n\n    public static void main(String[] args) {\n        int[] nums = {1, 5, 233, 7};\n        System.out.println("Maximum score: " + maxScore(nums)); // Output: 236\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"3-real-world-applications-overview",children:(0,i.jsx)(e.strong,{children:"3. Real-World Applications Overview"})}),"\n",(0,i.jsx)(e.h4,{id:"scheduling-problems",children:(0,i.jsx)(e.strong,{children:"Scheduling Problems"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Use Case"}),": Airline crew scheduling, task scheduling in operating systems."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Approach"}),": Greedy + DP (e.g., Job Scheduling above)."]}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"game-theory",children:(0,i.jsx)(e.strong,{children:"Game Theory"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Use Case"}),": Chess, Nim, Poker."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Approach"}),": Minimax + DP for computational efficiency."]}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"dynamic-pricing",children:(0,i.jsx)(e.strong,{children:"Dynamic Pricing"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Use Case"}),": E-commerce platforms, airlines."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Approach"}),": Multi-stage DP to decide optimal pricing strategy for maximum revenue."]}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"resource-allocation",children:(0,i.jsx)(e.strong,{children:"Resource Allocation"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Use Case"}),": Cloud resource management, manufacturing."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Approach"}),": DP-based knapsack or scheduling solutions."]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"advanced-dynamic-programming-concepts",children:(0,i.jsx)(e.strong,{children:"Advanced Dynamic Programming Concepts"})}),"\n",(0,i.jsx)(e.p,{children:"Dynamic Programming (DP) becomes even more powerful with advanced techniques and optimizations tailored to handle more complex problems efficiently. In this section, we will discuss:"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Policy-Based Optimization"})," (e.g., Knuth Optimization and Divide-and-Conquer DP)."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Approximation Techniques"})," (e.g., Dynamic Relaxation for NP-hard problems)."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"Real-World Problem Challenges"})," (e.g., examples from competitive programming platforms)."]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"1-policy-based-optimization",children:(0,i.jsx)(e.strong,{children:"1. Policy-Based Optimization"})}),"\n",(0,i.jsx)(e.h4,{id:"11-knuth-optimization",children:(0,i.jsx)(e.strong,{children:"1.1 Knuth Optimization"})}),"\n",(0,i.jsx)(e.p,{children:"Knuth Optimization is used to optimize problems where the recurrence relation involves a range of indices. For example, consider splitting a string or merging files to minimize cost."}),"\n",(0,i.jsx)(e.h5,{id:"problem-statement-2",children:(0,i.jsx)(e.strong,{children:"Problem Statement"})}),"\n",(0,i.jsxs)(e.p,{children:["Given an array ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"a"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"arr[]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]}),", find the minimum cost of merging ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"a"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mi,{children:"r"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(e.mi,{mathvariant:"normal",children:"."}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"arr[i...j]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"a"}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"rr"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mord",children:"..."}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]})," into a single element, where the cost of merging is proportional to the sum of the elements involved."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h5,{id:"key-idea",children:(0,i.jsx)(e.strong,{children:"Key Idea"})}),"\n",(0,i.jsxs)(e.p,{children:["Knuth Optimization states that if ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"k"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"k"}),(0,i.jsx)(e.mo,{children:"+"}),(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][k] + dp[k+1][j]"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"+"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})]})]})," is minimized by some ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"k"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]}),", then ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"k"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]})," for ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][j-1]"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})]})]})," will not exceed ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"k"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]})," for ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"j"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][j]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.05724em"},children:"j"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]}),". This observation reduces the complexity from ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mn,{children:"3"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n^3)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mtight",children:"3"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})," to ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mn,{children:"2"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n^2)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]}),"."]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h5,{id:"implementation-2",children:(0,i.jsx)(e.strong,{children:"Implementation"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java Code:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class KnuthOptimization {\n    public static int minMergeCost(int[] arr) {\n        int n = arr.length;\n        int[][] dp = new int[n][n];\n        int[][] opt = new int[n][n];\n        int[] prefixSum = new int[n + 1];\n\n        for (int i = 0; i < n; i++) {\n            prefixSum[i + 1] = prefixSum[i] + arr[i];\n            opt[i][i] = i;\n        }\n\n        for (int len = 2; len <= n; len++) {\n            for (int i = 0; i <= n - len; i++) {\n                int j = i + len - 1;\n                dp[i][j] = Integer.MAX_VALUE;\n\n                for (int k = opt[i][j - 1]; k <= opt[i + 1][j]; k++) {\n                    int cost = dp[i][k] + dp[k + 1][j] + prefixSum[j + 1] - prefixSum[i];\n                    if (cost < dp[i][j]) {\n                        dp[i][j] = cost;\n                        opt[i][j] = k;\n                    }\n                }\n            }\n        }\n\n        return dp[0][n - 1];\n    }\n\n    public static void main(String[] args) {\n        int[] arr = {10, 20, 30};\n        System.out.println("Minimum Merge Cost: " + minMergeCost(arr)); // Output: 90\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"12-divide-and-conquer-dp",children:(0,i.jsx)(e.strong,{children:"1.2 Divide-and-Conquer DP"})}),"\n",(0,i.jsx)(e.p,{children:"Divide-and-Conquer DP is another optimization technique that reduces the state space complexity by leveraging a specific property of the recurrence relation, often in problems involving matrix multiplication, range queries, or convex hulls."}),"\n",(0,i.jsxs)(e.h5,{id:"problem-example",children:[(0,i.jsx)(e.strong,{children:"Problem Example"}),":"]}),"\n",(0,i.jsx)(e.p,{children:"Find the minimum cost of cutting a stick into pieces of given lengths."}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"2-approximation-techniques",children:(0,i.jsx)(e.strong,{children:"2. Approximation Techniques"})}),"\n",(0,i.jsxs)(e.p,{children:["Some problems are so complex (NP-hard) that exact DP solutions are infeasible. In such cases, ",(0,i.jsx)(e.strong,{children:"approximation techniques"})," combined with DP can provide solutions close to optimal."]}),"\n",(0,i.jsx)(e.h4,{id:"example-traveling-salesman-problem-tsp",children:(0,i.jsx)(e.strong,{children:"Example: Traveling Salesman Problem (TSP)"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Approximation with Dynamic Relaxation"}),":"]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"Solve a simplified version of TSP using DP."}),"\n",(0,i.jsx)(e.li,{children:"Gradually add constraints to refine the solution."}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java Code (DP for Simplified TSP):"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import java.util.Arrays;\n\npublic class TSPApproximation {\n    public static int tsp(int[][] graph) {\n        int n = graph.length;\n        int[][] dp = new int[1 << n][n];\n        for (int[] row : dp) Arrays.fill(row, Integer.MAX_VALUE);\n        dp[1][0] = 0;\n\n        for (int mask = 1; mask < (1 << n); mask++) {\n            for (int u = 0; u < n; u++) {\n                if ((mask & (1 << u)) != 0) {\n                    for (int v = 0; v < n; v++) {\n                        if ((mask & (1 << v)) == 0) {\n                            dp[mask | (1 << v)][v] = Math.min(dp[mask | (1 << v)][v],\n                                                              dp[mask][u] + graph[u][v]);\n                        }\n                    }\n                }\n            }\n        }\n\n        int minCost = Integer.MAX_VALUE;\n        for (int i = 1; i < n; i++) {\n            minCost = Math.min(minCost, dp[(1 << n) - 1][i] + graph[i][0]);\n        }\n        return minCost;\n    }\n\n    public static void main(String[] args) {\n        int[][] graph = {\n            {0, 10, 15, 20},\n            {10, 0, 35, 25},\n            {15, 35, 0, 30},\n            {20, 25, 30, 0}\n        };\n        System.out.println("TSP Approximation Cost: " + tsp(graph)); // Output: 80\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"3-real-world-competitive-challenges",children:(0,i.jsx)(e.strong,{children:"3. Real-World Competitive Challenges"})}),"\n",(0,i.jsx)(e.h4,{id:"example-1-google-kick-start---painting-fence",children:(0,i.jsx)(e.strong,{children:"Example 1: Google Kick Start - Painting Fence"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Problem"}),": Given ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"n"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"})]})})]})," fence posts and ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"k"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]})," colors, calculate the number of ways to paint the fence such that no more than two adjacent posts have the same color."]}),"\n",(0,i.jsxs)(e.h5,{id:"dp-solution",children:[(0,i.jsx)(e.strong,{children:"DP Solution"}),":"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mn,{children:"0"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][0]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord",children:"0"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]}),": Ways to paint the ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"i"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6595em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"})]})})]}),"-th post differently from ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"i-1"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.7429em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"})]})]})]}),"."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mn,{children:"1"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[i][1]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord",children:"1"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]}),": Ways to paint the ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"i"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"i"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6595em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"})]})})]}),"-th post the same as ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"i"}),(0,i.jsx)(e.mo,{children:"\u2212"}),(0,i.jsx)(e.mn,{children:"1"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"i-1"})]})})}),(0,i.jsxs)(e.span,{className:"katex-html","aria-hidden":"true",children:[(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.7429em",verticalAlign:"-0.0833em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"i"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.jsx)(e.span,{className:"mbin",children:"\u2212"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.2222em"}})]}),(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6444em"}}),(0,i.jsx)(e.span,{className:"mord",children:"1"})]})]})]}),"."]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"Java Code:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class PaintingFence {\n    public static int numWays(int n, int k) {\n        if (n == 0) return 0;\n        if (n == 1) return k;\n\n        int same = k, diff = k * (k - 1);\n\n        for (int i = 3; i <= n; i++) {\n            int prevDiff = diff;\n            diff = (same + diff) * (k - 1);\n            same = prevDiff;\n        }\n\n        return same + diff;\n    }\n\n    public static void main(String[] args) {\n        int n = 3, k = 2;\n        System.out.println("Number of ways to paint: " + numWays(n, k)); // Output: 6\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"hybrid-approaches",children:(0,i.jsx)(e.strong,{children:"Hybrid approaches"})}),"\n",(0,i.jsxs)(e.p,{children:["In the upcoming section, we will dive deeper into ",(0,i.jsx)(e.strong,{children:"hybrid approaches"})," that combine ",(0,i.jsx)(e.strong,{children:"Dynamic Programming (DP)"})," with other algorithmic techniques to tackle complex problems. These hybrid approaches are crucial in solving real-world challenges, especially in environments where there are ",(0,i.jsx)(e.strong,{children:"multiple constraints"})," or ",(0,i.jsx)(e.strong,{children:"high computational demands"}),". We'll explore the following concepts:"]}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Combining Greedy Algorithms with DP"}),(0,i.jsx)(e.br,{}),"\n","Greedy algorithms often make locally optimal choices to reach a global optimum. However, there are cases where a pure greedy approach does not guarantee the optimal solution, and this is where ",(0,i.jsx)(e.strong,{children:"DP"})," can step in to refine the greedy approach by considering future consequences and ensuring that the global solution is optimal."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Multi-Dimensional DP"}),(0,i.jsx)(e.br,{}),"\n","Many problems involve multiple constraints or variables, which can't be solved using a simple one-dimensional DP array. We\u2019ll explore ",(0,i.jsx)(e.strong,{children:"multi-dimensional DP"})," techniques that allow us to model more complex state spaces. These problems often involve multiple parameters that need to be optimized simultaneously, like pathfinding problems with additional constraints or scheduling problems."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Solving Interactive Problems"}),(0,i.jsx)(e.br,{}),"\n","Some problems require ",(0,i.jsx)(e.strong,{children:"interactive solutions"}),", where the algorithm has to interact with an external system or dynamically adjust its decisions based on real-time input. We'll explore how DP can be combined with strategies to handle these dynamic environments."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"lets-explore-these-concepts-in-detail",children:(0,i.jsx)(e.strong,{children:"Let\u2019s Explore These Concepts in Detail:"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"1-combining-greedy-algorithms-with-dp",children:(0,i.jsx)(e.strong,{children:"1. Combining Greedy Algorithms with DP"})}),"\n",(0,i.jsxs)(e.p,{children:["Greedy algorithms are designed to make the best local choice at each step in the hope of finding the global optimum. While this works for many problems, in some cases, a greedy approach doesn't guarantee an optimal solution. In such cases, combining ",(0,i.jsx)(e.strong,{children:"greedy algorithms"})," with ",(0,i.jsx)(e.strong,{children:"Dynamic Programming"})," can refine the solution by taking into account the broader problem context."]}),"\n",(0,i.jsx)(e.h5,{id:"example-job-scheduling-problem",children:(0,i.jsx)(e.strong,{children:"Example: Job Scheduling Problem"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Problem:"}),(0,i.jsx)(e.br,{}),"\n","You are given a set of jobs, each with a start time, finish time, and profit. The goal is to select the maximum set of non-overlapping jobs that maximize the profit."]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Greedy Approach:"}),(0,i.jsx)(e.br,{}),"\n","One greedy approach might involve sorting jobs based on their finish times and selecting the ones that don\u2019t overlap. This can work in certain cases, but it's not guaranteed to find the optimal solution if there are situations where non-overlapping jobs have lower profits, but the overall combination results in higher profits."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"DP Approach:"}),(0,i.jsx)(e.br,{}),"\n","By using DP, we can combine the greedy approach with an optimal selection strategy, where we recursively calculate the maximum profit considering both the current job and all previously selected jobs, ensuring we maximize the profit globally."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h5,{id:"hybrid-solution-greedy--dp",children:(0,i.jsx)(e.strong,{children:"Hybrid Solution (Greedy + DP):"})}),"\n",(0,i.jsxs)(e.p,{children:["We'll first sort the jobs based on finish time and then use ",(0,i.jsx)(e.strong,{children:"Dynamic Programming"})," to store the maximum profit for each subset of jobs."]}),"\n",(0,i.jsx)(e.h5,{id:"java-code-for-job-scheduling-problem-greedy--dp",children:(0,i.jsx)(e.strong,{children:"Java Code for Job Scheduling Problem (Greedy + DP)"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import java.util.Arrays;\nimport java.util.Comparator;\n\npublic class JobScheduling {\n\n    static class Job {\n        int start, finish, profit;\n\n        Job(int start, int finish, int profit) {\n            this.start = start;\n            this.finish = finish;\n            this.profit = profit;\n        }\n    }\n\n    // Function to find the last job that doesn\'t conflict with the current job\n    static int findLastNonConflict(Job[] jobs, int n) {\n        for (int i = n - 1; i >= 0; i--) {\n            if (jobs[i].finish <= jobs[n].start) {\n                return i;\n            }\n        }\n        return -1; // No job found\n    }\n\n    // Function to schedule the jobs for maximum profit\n    static int findMaxProfit(Job[] jobs, int n) {\n        // Sort jobs according to their finish time\n        Arrays.sort(jobs, Comparator.comparingInt(job -> job.finish));\n\n        // DP array to store results of subproblems\n        int[] dp = new int[n];\n        dp[0] = jobs[0].profit;\n\n        // Fill the dp array by checking each job\n        for (int i = 1; i < n; i++) {\n            // Include the current job\n            int inclProfit = jobs[i].profit;\n            int l = findLastNonConflict(jobs, i);\n            if (l != -1) {\n                inclProfit += dp[l];\n            }\n\n            // Exclude the current job\n            int exclProfit = dp[i - 1];\n\n            // Take the maximum of including or excluding the current job\n            dp[i] = Math.max(inclProfit, exclProfit);\n        }\n\n        return dp[n - 1]; // Return the maximum profit\n    }\n\n    public static void main(String[] args) {\n        // Jobs (start time, finish time, profit)\n        Job[] jobs = {\n            new Job(1, 3, 50),\n            new Job(3, 5, 20),\n            new Job(6, 19, 100),\n            new Job(2, 100, 200)\n        };\n        int n = jobs.length;\n\n        System.out.println("Maximum Profit: " + findMaxProfit(jobs, n)); // Output: 250\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"explanation-of-code",children:(0,i.jsx)(e.strong,{children:"Explanation of Code:"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Job Class:"}),(0,i.jsx)(e.br,{}),"\n","Each job is represented by a start time, finish time, and profit."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Sort Jobs:"}),(0,i.jsx)(e.br,{}),"\n","The jobs are sorted based on their finish times. This step is inspired by the greedy approach, which selects jobs that finish the earliest to maximize room for subsequent jobs."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Dynamic Programming:"}),(0,i.jsx)(e.br,{}),"\n","The ",(0,i.jsx)(e.code,{children:"dp[]"})," array stores the maximum profit achievable up to each job. For each job, we decide whether to include it in the optimal schedule or exclude it, comparing the profit from both choices."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Find Last Non-Conflict Job:"}),(0,i.jsx)(e.br,{}),"\n","The function ",(0,i.jsx)(e.code,{children:"findLastNonConflict()"})," searches for the latest job that doesn\u2019t overlap with the current job. This allows us to combine jobs optimally."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"time-complexity",children:(0,i.jsx)(e.strong,{children:"Time Complexity:"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Time Complexity:"}),(0,i.jsx)(e.br,{}),"\n","Sorting the jobs takes ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"log"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n \\log n)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"mop",children:["lo",(0,i.jsx)(e.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]}),", and for each job, we perform a linear search to find the last non-conflicting job, resulting in an overall time complexity of ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsxs)(e.msup,{children:[(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mn,{children:"2"})]}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n^2)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1.0641em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsxs)(e.span,{className:"mord",children:[(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"msupsub",children:(0,i.jsx)(e.span,{className:"vlist-t",children:(0,i.jsx)(e.span,{className:"vlist-r",children:(0,i.jsx)(e.span,{className:"vlist",style:{height:"0.8141em"},children:(0,i.jsxs)(e.span,{style:{top:"-3.063em",marginRight:"0.05em"},children:[(0,i.jsx)(e.span,{className:"pstrut",style:{height:"2.7em"}}),(0,i.jsx)(e.span,{className:"sizing reset-size6 size3 mtight",children:(0,i.jsx)(e.span,{className:"mord mtight",children:"2"})})]})})})})})]}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]}),". We can optimize this further using binary search to find the last non-conflicting job, reducing the complexity to ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mi,{children:"log"}),(0,i.jsx)(e.mo,{children:"\u2061"}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n \\log n)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsxs)(e.span,{className:"mop",children:["lo",(0,i.jsx)(e.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,i.jsx)(e.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]}),"."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Space Complexity:"}),(0,i.jsx)(e.br,{}),"\n","The space complexity is ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"O"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"("}),(0,i.jsx)(e.mi,{children:"n"}),(0,i.jsx)(e.mo,{stretchy:"false",children:")"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"O(n)"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,i.jsx)(e.span,{className:"mopen",children:"("}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"n"}),(0,i.jsx)(e.span,{className:"mclose",children:")"})]})})]})," due to the DP table."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"2-multi-dimensional-dp",children:(0,i.jsx)(e.strong,{children:"2. Multi-Dimensional DP"})}),"\n",(0,i.jsxs)(e.p,{children:["For more complex problems that involve multiple variables or constraints, ",(0,i.jsx)(e.strong,{children:"multi-dimensional DP"})," is an effective technique. It expands the concept of a single DP table to include multiple dimensions (arrays), where each dimension represents a different aspect of the problem\u2019s state."]}),"\n",(0,i.jsx)(e.h5,{id:"example-knapsack-problem-with-multiple-constraints",children:(0,i.jsx)(e.strong,{children:"Example: Knapsack Problem with Multiple Constraints"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Problem:"}),(0,i.jsx)(e.br,{}),"\n","You have a knapsack with a weight limit, and you also need to consider additional constraints such as volume or cost."]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"State Representation:"}),(0,i.jsx)(e.br,{}),"\n",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsxs)(e.mrow,{children:[(0,i.jsx)(e.mi,{children:"d"}),(0,i.jsx)(e.mi,{children:"p"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"w"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"["}),(0,i.jsx)(e.mi,{children:"v"}),(0,i.jsx)(e.mo,{stretchy:"false",children:"]"})]}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"dp[w][v]"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"d"}),(0,i.jsx)(e.span,{className:"mord mathnormal",children:"p"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02691em"},children:"w"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"}),(0,i.jsx)(e.span,{className:"mopen",children:"["}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"}),(0,i.jsx)(e.span,{className:"mclose",children:"]"})]})})]})," where ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"w"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"w"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.02691em"},children:"w"})]})})]})," represents the weight, and ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"v"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"v"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.4306em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03588em"},children:"v"})]})})]})," represents the volume (or any other constraint)."]}),"\n"]}),"\n",(0,i.jsx)(e.h5,{id:"java-code-for-multi-dimensional-knapsack-problem",children:(0,i.jsx)(e.strong,{children:"Java Code for Multi-Dimensional Knapsack Problem:"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class MultiDimensionalKnapsack {\n    public static int knapsack(int[] weights, int[] values, int W, int V) {\n        int n = weights.length;\n        int[][] dp = new int[W + 1][V + 1];\n\n        for (int i = 0; i < n; i++) {\n            for (int w = W; w >= weights[i]; w--) {\n                for (int v = V; v >= 1; v--) {\n                    dp[w][v] = Math.max(dp[w][v], dp[w - weights[i]][v - 1] + values[i]);\n                }\n            }\n        }\n        return dp[W][V];\n    }\n\n    public static void main(String[] args) {\n        int[] weights = {1, 2, 3};\n        int[] values = {10, 20, 30};\n        int W = 4;\n        int V = 2;\n        System.out.println("Maximum value in knapsack: " + knapsack(weights, values, W, V));\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h4,{id:"3-solving-interactive-problems-with-dp",children:(0,i.jsx)(e.strong,{children:"3. Solving Interactive Problems with DP"})}),"\n",(0,i.jsxs)(e.p,{children:["Some problems, such as games or scenarios requiring ",(0,i.jsx)(e.strong,{children:"real-time decisions"}),", may need to incorporate ",(0,i.jsx)(e.strong,{children:"interactive feedback"})," or dynamic adjustments. In such cases, the algorithm must constantly adjust its state based on external inputs or outputs, and this is where ",(0,i.jsx)(e.strong,{children:"DP"})," can be powerful."]}),"\n",(0,i.jsx)(e.h5,{id:"example-interactive-game-theory-problem-nim-game",children:(0,i.jsx)(e.strong,{children:"Example: Interactive Game Theory Problem (Nim Game)"})}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"Problem:"}),(0,i.jsx)(e.br,{}),"\n","In the Nim game, two players take turns removing stones from a pile. Each player can take between 1 and ",(0,i.jsxs)(e.span,{className:"katex",children:[(0,i.jsx)(e.span,{className:"katex-mathml",children:(0,i.jsx)(e.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,i.jsxs)(e.semantics,{children:[(0,i.jsx)(e.mrow,{children:(0,i.jsx)(e.mi,{children:"k"})}),(0,i.jsx)(e.annotation,{encoding:"application/x-tex",children:"k"})]})})}),(0,i.jsx)(e.span,{className:"katex-html","aria-hidden":"true",children:(0,i.jsxs)(e.span,{className:"base",children:[(0,i.jsx)(e.span,{className:"strut",style:{height:"0.6944em"}}),(0,i.jsx)(e.span,{className:"mord mathnormal",style:{marginRight:"0.03148em"},children:"k"})]})})]})," stones on their turn, and the player who takes the last stone wins. We need to decide the best move at each stage."]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"DP Solution:"}),(0,i.jsx)(e.br,{}),"\n","We can use DP to decide the optimal move for any given number of stones left. The state of the game (number of stones left) and the current player can be modeled using a DP array."]}),"\n"]}),"\n",(0,i.jsx)(e.h5,{id:"java-code-nim-game-with-dp",children:(0,i.jsx)(e.strong,{children:"Java Code (Nim Game with DP):"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'public class NimGame {\n    public static boolean canWinNim(int n, int k) {\n        boolean[] dp = new boolean[n + 1];\n        dp[0] = false;  // If there are no stones left, the current player loses\n\n        for (int i = 1; i <= n; i++) {\n            for (int x = 1\n\n; x <= Math.min(k, i); x++) {\n                if (!dp[i - x]) {  // If there\'s a move that leaves the opponent with a losing state\n                    dp[i] = true;\n                    break;\n                }\n            }\n        }\n        return dp[n];  // If the current player can win starting with n stones\n    }\n\n    public static void main(String[] args) {\n        int n = 7; // Number of stones\n        int k = 3; // Maximum stones that can be removed per turn\n        System.out.println("Can win Nim: " + canWinNim(n, k));  // Output: true\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{})]})}function o(s={}){const{wrapper:e}={...(0,l.R)(),...s.components};return e?(0,i.jsx)(e,{...s,children:(0,i.jsx)(h,{...s})}):h(s)}},8453:(s,e,n)=>{n.d(e,{R:()=>r,x:()=>t});var a=n(6540);const i={},l=a.createContext(i);function r(s){const e=a.useContext(l);return a.useMemo((function(){return"function"==typeof s?s(e):{...e,...s}}),[e,s])}function t(s){let e;return e=s.disableParentContext?"function"==typeof s.components?s.components(i):s.components||i:r(s.components),a.createElement(l.Provider,{value:e},s.children)}},490:s=>{s.exports=JSON.parse('{"permalink":"/blog/test","editUrl":"https://github.com/absaini25/learnsutra/blog/2024-11-29-test.md","source":"@site/blog/2024-11-29-test.md","title":"Dynamic Programing","description":"Real-World Applications of Dynamic Programming","date":"2024-11-29T00:00:00.000Z","tags":[{"inline":false,"label":"Hola","permalink":"/blog/tags/hola","description":"Hola tag description"},{"inline":false,"label":"Docusaurus","permalink":"/blog/tags/docusaurus","description":"Docusaurus tag description"}],"readingTime":14.695,"hasTruncateMarker":false,"authors":[{"name":"Abhisar Saini","title":"Principal Software Engineer @ Expedia","url":"https://github.com/absaini25","page":{"permalink":"/blog/authors/absaini-25"},"socials":{"x":"https://x.com/yangshunz","github":"https://github.com/yangshun"},"imageURL":"https://github.com/absaini25.png","key":"absaini25"}],"frontMatter":{"slug":"test","title":"Dynamic Programing","authors":["absaini25"],"tags":["hola","docusaurus"]},"unlisted":false,"nextItem":{"title":"Welcome","permalink":"/blog/welcome"}}')}}]);